//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestService.proxy {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComplexNumber", Namespace="http://unespacioparanet.com/DataContracts")]
    [System.SerializableAttribute()]
    public partial class ComplexNumber : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ResultadoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Resultado {
            get {
                return this.ResultadoField;
            }
            set {
                if ((this.ResultadoField.Equals(value) != true)) {
                    this.ResultadoField = value;
                    this.RaisePropertyChanged("Resultado");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Shape", Namespace="http://schemas.datacontract.org/2004/07/WCFFundamentals")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestService.proxy.Circle))]
    public partial class Shape : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int xField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int yField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int x {
            get {
                return this.xField;
            }
            set {
                if ((this.xField.Equals(value) != true)) {
                    this.xField = value;
                    this.RaisePropertyChanged("x");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int y {
            get {
                return this.yField;
            }
            set {
                if ((this.yField.Equals(value) != true)) {
                    this.yField = value;
                    this.RaisePropertyChanged("y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Circle", Namespace="http://schemas.datacontract.org/2004/07/WCFFundamentals")]
    [System.SerializableAttribute()]
    public partial class Circle : TestService.proxy.Shape {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RadialField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Radial {
            get {
                return this.RadialField;
            }
            set {
                if ((this.RadialField.Equals(value) != true)) {
                    this.RadialField = value;
                    this.RaisePropertyChanged("Radial");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LibraryCatalog", Namespace="http://schemas.datacontract.org/2004/07/WCFFundamentals")]
    [System.SerializableAttribute()]
    public partial class LibraryCatalog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<object, object> theCatalogField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<object, object> theCatalog {
            get {
                return this.theCatalogField;
            }
            set {
                if ((object.ReferenceEquals(this.theCatalogField, value) != true)) {
                    this.theCatalogField = value;
                    this.RaisePropertyChanged("theCatalog");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Book", Namespace="http://schemas.datacontract.org/2004/07/WCFFundamentals")]
    [System.SerializableAttribute()]
    public partial class Book : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Magazine", Namespace="http://schemas.datacontract.org/2004/07/WCFFundamentals")]
    [System.SerializableAttribute()]
    public partial class Magazine : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MathOperationData", Namespace="http://schemas.datacontract.org/2004/07/WCFFundamentals")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<object, object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(int[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestService.proxy.ComplexNumber))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestService.proxy.Circle))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestService.proxy.Shape))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestService.proxy.LibraryCatalog))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestService.proxy.Book))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestService.proxy.Magazine))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestService.proxy.Car))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestService.proxy.CarConditionEnum))]
    public partial class MathOperationData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object NumbersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Numbers {
            get {
                return this.NumbersField;
            }
            set {
                if ((object.ReferenceEquals(this.NumbersField, value) != true)) {
                    this.NumbersField = value;
                    this.RaisePropertyChanged("Numbers");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Car", Namespace="http://schemas.datacontract.org/2004/07/WCFFundamentals")]
    [System.SerializableAttribute()]
    public partial class Car : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestService.proxy.CarConditionEnum ConditionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestService.proxy.CarConditionEnum Condition {
            get {
                return this.ConditionField;
            }
            set {
                if ((this.ConditionField.Equals(value) != true)) {
                    this.ConditionField = value;
                    this.RaisePropertyChanged("Condition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Model {
            get {
                return this.ModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelField, value) != true)) {
                    this.ModelField = value;
                    this.RaisePropertyChanged("Model");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CarConditionEnum", Namespace="http://schemas.datacontract.org/2004/07/WCFFundamentals")]
    public enum CarConditionEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        New = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Usado = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://unespacioparanet.com", ConfigurationName="proxy.IOperacionesMatematicas")]
    public interface IOperacionesMatematicas {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://unespacioparanet.com/IOperacionesMatematicas/Sumar", ReplyAction="http://unespacioparanet.com/IOperacionesMatematicas/SumarResponse")]
        TestService.proxy.ComplexNumber Sumar(double n1, double n2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://unespacioparanet.com/IOperacionesMatematicas/Sumar", ReplyAction="http://unespacioparanet.com/IOperacionesMatematicas/SumarResponse")]
        System.Threading.Tasks.Task<TestService.proxy.ComplexNumber> SumarAsync(double n1, double n2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://unespacioparanet.com/IOperacionesMatematicas/Resta", ReplyAction="http://unespacioparanet.com/IOperacionesMatematicas/RestaResponse")]
        TestService.proxy.ComplexNumber Resta(double n1, double n2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://unespacioparanet.com/IOperacionesMatematicas/Resta", ReplyAction="http://unespacioparanet.com/IOperacionesMatematicas/RestaResponse")]
        System.Threading.Tasks.Task<TestService.proxy.ComplexNumber> RestaAsync(double n1, double n2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://unespacioparanet.com/IOperacionesMatematicas/Multiplica", ReplyAction="http://unespacioparanet.com/IOperacionesMatematicas/MultiplicaResponse")]
        TestService.proxy.ComplexNumber Multiplica(double n1, double n2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://unespacioparanet.com/IOperacionesMatematicas/Multiplica", ReplyAction="http://unespacioparanet.com/IOperacionesMatematicas/MultiplicaResponse")]
        System.Threading.Tasks.Task<TestService.proxy.ComplexNumber> MultiplicaAsync(double n1, double n2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://unespacioparanet.com/IOperacionesMatematicas/Divide", ReplyAction="http://unespacioparanet.com/IOperacionesMatematicas/DivideResponse")]
        TestService.proxy.ComplexNumber Divide(double n1, double n2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://unespacioparanet.com/IOperacionesMatematicas/Divide", ReplyAction="http://unespacioparanet.com/IOperacionesMatematicas/DivideResponse")]
        System.Threading.Tasks.Task<TestService.proxy.ComplexNumber> DivideAsync(double n1, double n2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://unespacioparanet.com/IOperacionesMatematicas/GetFigure", ReplyAction="http://unespacioparanet.com/IOperacionesMatematicas/GetFigureResponse")]
        TestService.proxy.Circle GetFigure();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://unespacioparanet.com/IOperacionesMatematicas/GetFigure", ReplyAction="http://unespacioparanet.com/IOperacionesMatematicas/GetFigureResponse")]
        System.Threading.Tasks.Task<TestService.proxy.Circle> GetFigureAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://unespacioparanet.com/IOperacionesMatematicas/Catalog", ReplyAction="http://unespacioparanet.com/IOperacionesMatematicas/CatalogResponse")]
        TestService.proxy.LibraryCatalog Catalog();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://unespacioparanet.com/IOperacionesMatematicas/Catalog", ReplyAction="http://unespacioparanet.com/IOperacionesMatematicas/CatalogResponse")]
        System.Threading.Tasks.Task<TestService.proxy.LibraryCatalog> CatalogAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://unespacioparanet.com/IOperacionesMatematicas/Numbers", ReplyAction="http://unespacioparanet.com/IOperacionesMatematicas/NumbersResponse")]
        TestService.proxy.MathOperationData Numbers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://unespacioparanet.com/IOperacionesMatematicas/Numbers", ReplyAction="http://unespacioparanet.com/IOperacionesMatematicas/NumbersResponse")]
        System.Threading.Tasks.Task<TestService.proxy.MathOperationData> NumbersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://unespacioparanet.com/IOperacionesMatematicas/GetCar", ReplyAction="http://unespacioparanet.com/IOperacionesMatematicas/GetCarResponse")]
        TestService.proxy.Car GetCar();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://unespacioparanet.com/IOperacionesMatematicas/GetCar", ReplyAction="http://unespacioparanet.com/IOperacionesMatematicas/GetCarResponse")]
        System.Threading.Tasks.Task<TestService.proxy.Car> GetCarAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOperacionesMatematicasChannel : TestService.proxy.IOperacionesMatematicas, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OperacionesMatematicasClient : System.ServiceModel.ClientBase<TestService.proxy.IOperacionesMatematicas>, TestService.proxy.IOperacionesMatematicas {
        
        public OperacionesMatematicasClient() {
        }
        
        public OperacionesMatematicasClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OperacionesMatematicasClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OperacionesMatematicasClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OperacionesMatematicasClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TestService.proxy.ComplexNumber Sumar(double n1, double n2) {
            return base.Channel.Sumar(n1, n2);
        }
        
        public System.Threading.Tasks.Task<TestService.proxy.ComplexNumber> SumarAsync(double n1, double n2) {
            return base.Channel.SumarAsync(n1, n2);
        }
        
        public TestService.proxy.ComplexNumber Resta(double n1, double n2) {
            return base.Channel.Resta(n1, n2);
        }
        
        public System.Threading.Tasks.Task<TestService.proxy.ComplexNumber> RestaAsync(double n1, double n2) {
            return base.Channel.RestaAsync(n1, n2);
        }
        
        public TestService.proxy.ComplexNumber Multiplica(double n1, double n2) {
            return base.Channel.Multiplica(n1, n2);
        }
        
        public System.Threading.Tasks.Task<TestService.proxy.ComplexNumber> MultiplicaAsync(double n1, double n2) {
            return base.Channel.MultiplicaAsync(n1, n2);
        }
        
        public TestService.proxy.ComplexNumber Divide(double n1, double n2) {
            return base.Channel.Divide(n1, n2);
        }
        
        public System.Threading.Tasks.Task<TestService.proxy.ComplexNumber> DivideAsync(double n1, double n2) {
            return base.Channel.DivideAsync(n1, n2);
        }
        
        public TestService.proxy.Circle GetFigure() {
            return base.Channel.GetFigure();
        }
        
        public System.Threading.Tasks.Task<TestService.proxy.Circle> GetFigureAsync() {
            return base.Channel.GetFigureAsync();
        }
        
        public TestService.proxy.LibraryCatalog Catalog() {
            return base.Channel.Catalog();
        }
        
        public System.Threading.Tasks.Task<TestService.proxy.LibraryCatalog> CatalogAsync() {
            return base.Channel.CatalogAsync();
        }
        
        public TestService.proxy.MathOperationData Numbers() {
            return base.Channel.Numbers();
        }
        
        public System.Threading.Tasks.Task<TestService.proxy.MathOperationData> NumbersAsync() {
            return base.Channel.NumbersAsync();
        }
        
        public TestService.proxy.Car GetCar() {
            return base.Channel.GetCar();
        }
        
        public System.Threading.Tasks.Task<TestService.proxy.Car> GetCarAsync() {
            return base.Channel.GetCarAsync();
        }
    }
}
