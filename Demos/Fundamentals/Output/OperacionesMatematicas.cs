//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(Namespace="http://unespacioparanet.com", ConfigurationName="IOperacionesMatematicas")]
public interface IOperacionesMatematicas
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://unespacioparanet.com/IOperacionesMatematicas/Sumar", ReplyAction="http://unespacioparanet.com/IOperacionesMatematicas/SumarResponse")]
    double Sumar(double n1, double n2);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://unespacioparanet.com/IOperacionesMatematicas/Sumar", ReplyAction="http://unespacioparanet.com/IOperacionesMatematicas/SumarResponse")]
    System.Threading.Tasks.Task<double> SumarAsync(double n1, double n2);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://unespacioparanet.com/IOperacionesMatematicas/Resta", ReplyAction="http://unespacioparanet.com/IOperacionesMatematicas/RestaResponse")]
    double Resta(double n1, double n2);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://unespacioparanet.com/IOperacionesMatematicas/Resta", ReplyAction="http://unespacioparanet.com/IOperacionesMatematicas/RestaResponse")]
    System.Threading.Tasks.Task<double> RestaAsync(double n1, double n2);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://unespacioparanet.com/IOperacionesMatematicas/Multiplica", ReplyAction="http://unespacioparanet.com/IOperacionesMatematicas/MultiplicaResponse")]
    double Multiplica(double n1, double n2);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://unespacioparanet.com/IOperacionesMatematicas/Multiplica", ReplyAction="http://unespacioparanet.com/IOperacionesMatematicas/MultiplicaResponse")]
    System.Threading.Tasks.Task<double> MultiplicaAsync(double n1, double n2);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://unespacioparanet.com/IOperacionesMatematicas/Divide", ReplyAction="http://unespacioparanet.com/IOperacionesMatematicas/DivideResponse")]
    double Divide(double n1, double n2);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://unespacioparanet.com/IOperacionesMatematicas/Divide", ReplyAction="http://unespacioparanet.com/IOperacionesMatematicas/DivideResponse")]
    System.Threading.Tasks.Task<double> DivideAsync(double n1, double n2);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IOperacionesMatematicasChannel : IOperacionesMatematicas, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class OperacionesMatematicasClient : System.ServiceModel.ClientBase<IOperacionesMatematicas>, IOperacionesMatematicas
{
    
    public OperacionesMatematicasClient()
    {
    }
    
    public OperacionesMatematicasClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public OperacionesMatematicasClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public OperacionesMatematicasClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public OperacionesMatematicasClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public double Sumar(double n1, double n2)
    {
        return base.Channel.Sumar(n1, n2);
    }
    
    public System.Threading.Tasks.Task<double> SumarAsync(double n1, double n2)
    {
        return base.Channel.SumarAsync(n1, n2);
    }
    
    public double Resta(double n1, double n2)
    {
        return base.Channel.Resta(n1, n2);
    }
    
    public System.Threading.Tasks.Task<double> RestaAsync(double n1, double n2)
    {
        return base.Channel.RestaAsync(n1, n2);
    }
    
    public double Multiplica(double n1, double n2)
    {
        return base.Channel.Multiplica(n1, n2);
    }
    
    public System.Threading.Tasks.Task<double> MultiplicaAsync(double n1, double n2)
    {
        return base.Channel.MultiplicaAsync(n1, n2);
    }
    
    public double Divide(double n1, double n2)
    {
        return base.Channel.Divide(n1, n2);
    }
    
    public System.Threading.Tasks.Task<double> DivideAsync(double n1, double n2)
    {
        return base.Channel.DivideAsync(n1, n2);
    }
}
