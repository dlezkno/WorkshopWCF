//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfDemo
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Invent", Namespace="http://schemas.datacontract.org/2004/07/WcfDemo")]
    public partial class Invent : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int CodeField;
        
        private string ProductNameField;
        
        private int QuantityField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Code
        {
            get
            {
                return this.CodeField;
            }
            set
            {
                this.CodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ProductName
        {
            get
            {
                return this.ProductNameField;
            }
            set
            {
                this.ProductNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Quantity
        {
            get
            {
                return this.QuantityField;
            }
            set
            {
                this.QuantityField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InventFault", Namespace="http://schemas.datacontract.org/2004/07/WcfDemo")]
    public partial class InventFault : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string MessageField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return this.MessageField;
            }
            set
            {
                this.MessageField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(Namespace="http://demoswcf/invent", ConfigurationName="Invent")]
public interface Invent
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://demoswcf/invent/Get", ReplyAction="http://demoswcf/invent/Invent/GetInventResponse")]
    WcfDemo.Invent[] GetInvent();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://demoswcf/invent/Get", ReplyAction="http://demoswcf/invent/Invent/GetInventResponse")]
    System.Threading.Tasks.Task<WcfDemo.Invent[]> GetInventAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://demoswcf/invent/AddInvent", ReplyAction="http://demoswcf/invent/Invent/AddInventResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(WcfDemo.InventFault), Action="http://demoswcf/invent/FaultInvent", Name="InventFault", Namespace="http://schemas.datacontract.org/2004/07/WcfDemo")]
    void AddInvent(int code, string productName, int quantity);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://demoswcf/invent/AddInvent", ReplyAction="http://demoswcf/invent/Invent/AddInventResponse")]
    System.Threading.Tasks.Task AddInventAsync(int code, string productName, int quantity);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface InventChannel : Invent, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class InventClient : System.ServiceModel.ClientBase<Invent>, Invent
{
    
    public InventClient()
    {
    }
    
    public InventClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public InventClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public InventClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public InventClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public WcfDemo.Invent[] GetInvent()
    {
        return base.Channel.GetInvent();
    }
    
    public System.Threading.Tasks.Task<WcfDemo.Invent[]> GetInventAsync()
    {
        return base.Channel.GetInventAsync();
    }
    
    public void AddInvent(int code, string productName, int quantity)
    {
        base.Channel.AddInvent(code, productName, quantity);
    }
    
    public System.Threading.Tasks.Task AddInventAsync(int code, string productName, int quantity)
    {
        return base.Channel.AddInventAsync(code, productName, quantity);
    }
}
